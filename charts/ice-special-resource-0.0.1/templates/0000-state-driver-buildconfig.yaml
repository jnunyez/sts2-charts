apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: {{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverBuild}}
  name: {{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverBuild}}
  namespace: {{.Values.specialresource.spec.namespace}}
  annotations:
    specialresource.openshift.io/wait: "true"
    specialresource.openshift.io/driver-container-vendor: "ice-special-resource"
    specialresource.openshift.io/kernel-affine: "true"
spec:
  nodeSelector:
    feature.node.kubernetes.io/custom-intel.e810_c.devices: "true"
  resources:
    limits:
      ephemeral-storage: "10Gi"
  runPolicy: "Serial"

  source:
    configMaps:
      - configMap:
          name: ice-special-resource-src
    dockerfile: |
      ARG BUILD_BASE
      FROM $BUILD_BASE
      MAINTAINER "rmr@silicom.dk"

      {{- if eq .Values.runArgs.buildIce "true" }}
      ARG ICE_VERSION
      WORKDIR /build
      COPY ice.tgz .
      RUN tar xvf ice.tgz
      RUN make -C ice-$ICE_VERSION/src -j4
      {{- end }}

      FROM registry.access.redhat.com/ubi8/ubi-minimal
      RUN microdnf install pciutils kmod procps iproute nc util-linux
      {{- if eq .Values.runArgs.buildIce "true" }}
      ARG ICE_VERSION
      COPY --from=0 /build/ice-$ICE_VERSION/src/ice.ko /
      COPY --from=0 /build/ice-$ICE_VERSION/ddp/*.pkg /root/ice.pkg
      {{- end }}
  strategy:
    dockerStrategy:
      buildArgs:
        {{- range $arg := .Values.buildArgs }}
        - name: {{ $arg.name }}
          value: {{ $arg.value }}
        {{- end }}
        - name: BUILD_BASE
#          value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:aea6d1e324558e2484bb14d6ffb8455fc752628c12118e8f33c8ae0a31990e06
          value: {{.Values.driverToolkitImage}}

  output:
    to:
      kind: DockerImage
      name: "{{.Values.driverRegistry}}/{{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverContainer}}:v{{.Values.kernelFullVersion}}"
